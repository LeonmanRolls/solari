<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1432481973216">{:repl-history {:ide [], :local [&quot;(loop [count 0]\n  (if (&gt; count 5)\n   (fn [_]) \n   (recur (inc count))))&quot; &quot;(loop [count 0]\n  (if (&gt; count 5)\n   (fn [_] (println )) \n   (recur (inc count))))&quot; &quot;(\n  (loop [count 0]\n  (if (&gt; count 5)\n   (fn [x] (println x)) \n   (recur (inc count))))\n  \n  )&quot; &quot;(\n\n  (loop [count 0]\n    (if (&lt; count 5)\n      (fn [x] (println x))\n      (recur (inc count))))\n  \n  )&quot; &quot;menu-map&quot; &quot;(:top-level menu-map)&quot; &quot;([:top-level]  @menu-map)&quot; &quot;(loop [count 0]\n  (if (&lt; count 5)\n   (fn [x] (println x)) \n   (recur (inc count))))&quot; &quot;(loop [count 0]\n  (if (&lt; count 5)\n   (fn [x] x) \n   (recur (inc count))))&quot; &quot;(:sub-level @menu-map)&quot; &quot;(:sub-level2 @menu-map)&quot; &quot;(:sub-level3 @menu-map)&quot; &quot;(:sub-level1 @menu-map)&quot; &quot;(:top-level @menu-map)&quot; &quot;(def test {:one {:two \&quot;two\&quot;}})&quot; &quot;(:one bla)&quot; &quot;(:two (:one bla))&quot; &quot;(def bla {:one {:two \&quot;two\&quot;}})&quot; &quot;(-&gt; bla :one)&quot; &quot;(-&gt; bla :two)&quot; &quot;(-&gt; bla :one :two)&quot; &quot;(loop [count 0]\n  (if (&gt; count 5)\n   (fn [x] x) \n   (recur (inc count))))&quot; &quot;(loop [count 0]\n  (if (&gt; count 5)\n   (fn [x] (println xx)) \n   (recur (inc count))))&quot; &quot;(loop [count 0]\n  (if (&gt; count 5)\n   (fn [x] (println x)) \n   (recur (inc count))))&quot; &quot;(loop [count 0]\n  (when (&gt; count 5)\n   (fn [x] (println x)) \n   (recur (inc count))))&quot; &quot;(loop [count 0]\n  (when (&lt; count 5)\n   (fn [x] (println x)) \n   (recur (inc count))))&quot; &quot;(loop [x 10]\n  (when (&gt; x 1)\n    (println x)\n    (recur (- x 2))))&quot; &quot;(defn left-nav-listener []\n  (ef/at \&quot;.logo\&quot;\n         (ev/listen :click  #((do\n                                (sec/dispatch! \&quot;/\&quot;)\n                                (ef/at \&quot;.nav-ul-left li\&quot; (ef/remove-class \&quot;nav-left-selected\&quot;))\n                                (ef/at \&quot;.nav-ul-right\&quot; (ef/add-class \&quot;hidden\&quot;))))))\n\n  (ef/at \&quot;.nav-ul-left\&quot;\n         (ev/listen-live :click \&quot;li\&quot;\n                         #(let [text (.-innerText (.-currentTarget %))]\n                           (println text)\n                           (toggle-main-menu (.-currentTarget %))\n                           (cond\n                             (not= -1 (.indexOf text \&quot;you\&quot;)) (toggle-submenu \&quot;sub1\&quot;)\n                             (not= -1 (.indexOf text \&quot;architects\&quot;)) (toggle-submenu \&quot;sub2\&quot;)\n                             (not= -1 (.indexOf text \&quot;us\&quot;)) (toggle-submenu \&quot;sub3\&quot;)\n                             :else \&quot;list item not there\&quot;)))))&quot; &quot;(defn left-nav-listener []\n  (ef/at \&quot;.logo\&quot;\n         (ev/listen :click  #((do\n                                (sec/dispatch! \&quot;/\&quot;)\n                                (ef/at \&quot;.nav-ul-left li\&quot; (ef/remove-class \&quot;nav-left-selected\&quot;))\n                                (ef/at \&quot;.nav-ul-right\&quot; (ef/add-class \&quot;hidden\&quot;))))))\n\n  (ef/at \&quot;.nav-ul-left\&quot;\n         (ev/listen-live :click \&quot;li\&quot;\n                         #(let [text (.-innerText (.-currentTarget %))]\n                           (.dir js/console %)\n                           (toggle-main-menu (.-currentTarget %))\n                           (cond\n                             (not= -1 (.indexOf text \&quot;you\&quot;)) (toggle-submenu \&quot;sub1\&quot;)\n                             (not= -1 (.indexOf text \&quot;architects\&quot;)) (toggle-submenu \&quot;sub2\&quot;)\n                             (not= -1 (.indexOf text \&quot;us\&quot;)) (toggle-submenu \&quot;sub3\&quot;)\n                             :else \&quot;list item not there\&quot;)))))&quot; &quot;(sec/set-config! :prefix \&quot;#\&quot;)&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #(-&gt; % .-token sec/dispatch!))\n  (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #(println %)\n                      #_(-&gt; % .-token sec/dispatch!))\n  (doto history (.setEnabled true)))&quot; &quot;(defroute \&quot;\&quot; {:as params}\n          (do\n            (om/root home-page {}\n                   {:target (. js/document (getElementById \&quot;main-content-container\&quot;))})\n            (ef/at \&quot;body\&quot; (ef/set-attr :background \&quot;home\&quot;))\n            (ef/at \&quot;.context\&quot; (ef/content \&quot;Welcome\&quot;))\n            (js/blabla)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #(.dir js/console %)\n                      #_(-&gt; % .-token sec/dispatch!))\n  (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #_(.dir js/console %)\n                      #(-&gt; % .-token sec/dispatch!))\n  (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #_(.dir js/console %)\n                      #(-&gt; % .-token sec/dispatch!))\n                      (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #(.dir js/console (-&gt; % .-token sec/dispatch!))\n                      #_(-&gt; % .-token sec/dispatch!))\n                      (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #_(.dir js/console (-&gt; % .-token sec/dispatch!))\n                      #(-&gt; % .-token sec/dispatch!))\n                      (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #(.dir js/console (.-token %))\n                      #_(-&gt; % .-token sec/dispatch!))\n                      (doto history (.setEnabled true)))&quot; &quot;(let [history (History.)\n      navigation EventType/NAVIGATE]\n  (goog.events/listen history\n                      navigation\n                      #(.dir js/console %)\n                      #_(-&gt; % .-token sec/dispatch!))\n                      (doto history (.setEnabled true)))&quot; &quot;(println \&quot;hi ther\n\&quot;)&quot; &quot;(secretary/dispatch! \&quot;/users/gf3\&quot;)&quot; &quot;(secretary/dispatch! \&quot;/users/32432423\&quot;)&quot; &quot;(ns views.sidebar\n  (:require [secretary.core :as secretary :refer-macros [defroute]]\n            [enfocus.core :as ef]\n            [goog.events :as events]\n            [om.core :as om :include-macros true]\n            [om.dom :as dom :include-macros true])\n  (:require-macros [enfocus.macros :as em]))&quot; &quot;(em/at \&quot;#main-nav-container\&quot;\n       (ev/listen-live :click \&quot;li3\&quot;\n                       #(ef/at (.-currentTarget %)\n                               (ef/content \&quot;I have been replaced\&quot;))))&quot; &quot;{:a \&quot;a\&quot; :b \&quot;b\&quot;}&quot; &quot;(def bla {:a \&quot;a\&quot; :b \&quot;b\&quot;})&quot; &quot;(:a bla)&quot; &quot;(bla :a)&quot; &quot;(ns solari.routes\n  (:require [secretary.core :as sec :refer-macros [defroute]]\n            [om.core :as om :include-macros true]\n            [om.dom :as dom :include-macros true]\n            [om-bootstrap.modal :as md]\n            [solari.views.residential :as residential]\n            [goog.events :as events]\n            [goog.history.EventType :as EventType]\n            [enfocus.core :as ef])\n  (:require-macros [enfocus.macros :as em])\n  (:import goog.History))&quot; &quot;(admin)&quot; &quot;(browser-repl)&quot; &quot;(ns solari.views.admin\n  (:require [reagent.core :as reagent :refer [atom]]\n            [reagent.session :as session]\n            [secretary.core :as secretary :include-macros true]\n            [goog.events :as events]\n            [goog.history.EventType :as EventType]\n            [cljsjs.react :as react])\n  (:import goog.History))&quot; &quot;(init!)&quot; &quot;(ns solari.data\n  (:require-macros [cljs.core.async.macros :refer [go]])\n  (:require [cljs.core.async :refer [put! chan &lt;! &gt;! take! close!]]\n            [solari.utils :as u]\n            [ajax.core :refer [GET POST PUT]]))&quot; &quot;(GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :handler #(println %)\n      :error-handler u/ajax-error-handler})&quot; &quot;(GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :handler #(println (js-&gt;clj %))\n      :error-handler u/ajax-error-handler})&quot; &quot;(GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :format \&quot;edn\&quot;\n      :handler #(println (js-&gt;clj %))\n      :error-handler u/ajax-error-handler})&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         project-atom\n                          )\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :format :edn\n      :handler #(println (js-&gt;clj %))\n      :error-handler u/ajax-error-handler})&quot; &quot;(GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :format :edn\n      :handler #(reset! projects-atom %)\n      :error-handler u/ajax-error-handler})&quot; &quot;(defn data-init \n  (go \n    (GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :format :edn\n      :handler #(reset! projects-atom %)\n      :error-handler u/ajax-error-handler})))&quot; &quot;(defn data-init []\n  (go \n    (GET \&quot;/projects/\&quot;\n     {:params {:info \&quot;all-game-info\&quot;\n               :fields \&quot;gamename,gameid\&quot;\n               :gameid \&quot;we\&quot;}\n      :format :edn\n      :handler #(reset! projects-atom %)\n      :error-handler u/ajax-error-handler})))&quot; &quot;(def projects-atom (atom {}))&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :post]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :post! (fn [ctx]\n                      (println ctx))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(POST \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;}\n       :error-handler u/ajax-error-handler})&quot; &quot;(POST \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;}\n       :handler #(Println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(POST \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;}\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;}\n       :format :edn\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;}\n       :format :raw\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;\n                :projects-atom @projects-atom}\n       :format :raw\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:message \&quot;Hello World\&quot;\n                :projects-atom @projects-atom}\n       :format :edn\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params @projects-atom\n       :format :edn\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params @projects-atom\n       :format :raw\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:projects @projects-atom}\n       :format :transit\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(data-init)&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:projects @projects-atom}\n       :format :raw\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:projects @projects-atom}\n       :format :edn\n       :handler #(println %)\n       :error-handler u/ajax-error-handler})&quot; &quot;(PUT \&quot;/projects/\&quot;\n      {:params {:projects @projects-atom}\n       :error-handler u/ajax-error-handler})&quot; &quot;(ns solari.model\n  (:require [liberator.core :refer [defresource resource request-method-in]]\n            [environ.core :refer [env]]\n            [clojure.core.async :refer [&gt;! &lt;! &gt;!! &lt;!! go chan buffer close! thread alts! alts!! timeout]]\n            [cljs.reader :as reader]\n            [clojure.string :as string]\n            [clojure.java.jdbc :as sql]\n            [clojure.java.jdbc.deprecated :as sql-old]))&quot; &quot;(ns solari.model\n  (:require [liberator.core :refer [defresource resource request-method-in]]\n            [environ.core :refer [env]]\n            [clojure.core.async :refer [&gt;! &lt;! &gt;!! &lt;!! go chan buffer close! thread alts! alts!! timeout]]\n            [clojure.core.reader :as reader]\n            [clojure.string :as string]\n            [clojure.java.jdbc :as sql]\n            [clojure.java.jdbc.deprecated :as sql-old]))&quot; &quot;(pr-str projects-atom)&quot; &quot;(read-string (pr-str projects-atom))&quot; &quot;(def bla (pr-str projects-atom))&quot; &quot;(def bla (prn-str projects-atom))&quot; &quot;(def bla (prn-str @projects-atom))&quot; &quot;(read-string bla)&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (:params (:request ctx)) ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (read-string (:params (:request ctx)))  ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (:projects (:params (:request ctx)))   ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (reset! projects-atom (:projects (:params (:request ctx)))) ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;@proejects-atom&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (:projects (:params (:request ctx)))#_(reset! projects-atom ) ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (read-string (:projects (:params (:request ctx)))) #_(reset! projects-atom ) ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                      (println (reset! projects-atom (read-string (:projects (:params (:request ctx)))))  ))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                     (reset! projects-atom (read-string (:projects (:params (:request ctx))))))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;(defresource projects\n             :service-available? true\n             :allowed-methods [:get :put]\n             :handle-method-not-allowed  \&quot;Method not allowed\&quot;\n             :handle-ok (fn [context]\n                         @projects-atom)\n             :put! (fn [ctx]\n                     (reset! projects-atom (:projects (:params (:request ctx)))))\n             :available-media-types [\&quot;application/edn\&quot;])&quot; &quot;e&quot; &quot;@projects-atom&quot; &quot;(def projects-atom\n  (atom {:projects [{:text \&quot;Homes are personal projects and we love that. When we take on a residential project we take on the thoughts, feelings, personality and unique circumstances of the client. We work closely with you to ensure that your home is exactly that – yours. You’re with us every step of the way, this not only makes absolute sense but undoubtedly delivers the best results. We share the challenges and successes with you and make you the expert of your own project by going at a pace that promotes attention to detail and clarity of thought from start to finish.\&quot;\n                     :category \&quot;Residential\&quot;\n                     :projects [{:id \&quot;project-01\&quot;\n                                 :projectid \&quot;wadestown\&quot;\n                                 :title \&quot;Wadestown Renovation\&quot;\n                                 :thumbnail \&quot;/img/wadestown.jpg\&quot;}\n\n                                {:id \&quot;project-02\&quot;\n                                 :projectid \&quot;lyall\&quot;\n                                 :title \&quot;Lyall bay renovation\&quot;\n                                 :thumbnail \&quot;/img/lyall.jpg\&quot;}\n\n                                {:id \&quot;project-03\&quot;\n                                 :projectid \&quot;catline\&quot;\n                                 :title \&quot;Catline Lane Subdivision\&quot;\n                                 :thumbnail \&quot;/img/lyall.jpg\&quot;}]}\n\n                    {:text \&quot;Homes are personal projects and we love that. When we take on a residential project we take on the thoughts, feelings, personality and unique circumstances of the client. We work closely with you to ensure that your home is exactly that – yours. You’re with us every step of the way, this not only makes absolute sense but undoubtedly delivers the best results. We share the challenges and successes with you and make you the expert of your own project by going at a pace that promotes attention to detail and clarity of thought from start to finish.\&quot;\n                     :category \&quot;Multi-Residential\&quot;\n                     :projects [{:id \&quot;project-01\&quot;\n                                 :projectid \&quot;wadestown\&quot;\n                                 :title \&quot;Wadestown Renovation\&quot;\n                                 :thumbnail \&quot;/img/wadestown.jpg\&quot;}\n\n                                {:id \&quot;project-02\&quot;\n                                 :projectid \&quot;lyall\&quot;\n                                 :title \&quot;Lyall bay renovation\&quot;\n                                 :thumbnail \&quot;/img/lyall.jpg\&quot;}\n\n                                {:id \&quot;project-03\&quot;\n                                 :projectid \&quot;catline\&quot;\n                                 :title \&quot;Catline Lane Subdivision\&quot;\n                                 :thumbnail \&quot;/img/lyall.jpg\&quot;}]}\n\n                    {:text \&quot;Homes are personal projects and we love that. When we take on a residential project we take on the thoughts, feelings, personality and unique circumstances of the client. We work closely with you to ensure that your home is exactly that – yours. You’re with us every step of the way, this not only makes absolute sense but undoubtedly delivers the best results. We share the challenges and successes with you and make you the expert of your own project by going at a pace that promotes attention to detail and clarity of thought from start to finish.\&quot;\n                     :category \&quot;Commerical\&quot;\n                     :projects [{:id \&quot;project-01\&quot;\n                                 :projectid \&quot;wadestown\&quot;\n                                 :title \&quot;Wadestown Renovation\&quot;\n                                 :thumbnail \&quot;/img/wadestown.jpg\&quot;}\n\n                                {:id \&quot;project-02\&quot;\n                                 :projectid \&quot;lyall\&quot;\n                                 :title \&quot;Lyall bay renovation\&quot;\n                                 :thumbnail \&quot;/img/lyall.jpg\&quot;}\n\n                                {:id \&quot;project-03\&quot;\n                                 :projectid \&quot;catline\&quot;\n                                 :title \&quot;Catline Lane Subdivision\&quot;\n                                 :thumbnail \&quot;/img/lyall.jpg\&quot;}]}]}))&quot; &quot;(run)&quot;], :remote []}}</component>
</project>